ALTER TABLE ptai.com_resultado_tx_completo 
ALTER COLUMN pontos_positivo TYPE JSONB USING 
  (SELECT array_to_json(array_agg(trim(regexp_replace(item, '^\d+\)\s*', ''))))
   FROM regexp_split_to_table(pontos_positivo, ',') AS item);

ALTER TABLE ptai.com_resultado_tx_completo 
ALTER COLUMN pontos_aprimorar TYPE JSONB USING
  (SELECT array_to_json(array_agg(trim(regexp_replace(item, '^\d+\)\s*', ''))))
   FROM regexp_split_to_table(pontos_aprimorar, ',') AS item);

# Ap√≥s obter o DataFrame do PostgreSQL
for idx, row in df.iterrows():
    # Converte pontos_positivo de string para lista
    if pd.notna(row['pontos_positivo']):
        pontos_positivo_str = row['pontos_positivo']
        # Regex para extrair os pontos numerados
        import re
        pontos_positivo_list = [item.strip() for item in re.split(r'\d+\)\s*', pontos_positivo_str) if item.strip()]
        df.at[idx, 'pontos_positivo'] = pontos_positivo_list
    
    # Converte pontos_aprimorar de string para lista
    if pd.notna(row['pontos_aprimorar']):
        pontos_aprimorar_str = row['pontos_aprimorar']
        pontos_aprimorar_list = [item.strip() for item in re.split(r'\d+\)\s*', pontos_aprimorar_str) if item.strip()]
        df.at[idx, 'pontos_aprimorar'] = pontos_aprimorar_list

