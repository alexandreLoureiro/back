elif data.get("agente") == 'rcmkpmg' and data.get("param1") == 'consolidado':
    print('>>>>>> rcmkpmg consolidado <<<<<<')
    query = f"""
        SELECT DISTINCT
            periodo_apuracao,
            relatorios_periodo,
            sumario_executivo_rel,
            racional_sumario_rel,
            sumario_executivo_per,
            racional_sumario_per,
            CONCAT(
                'Com base nos relatórios de auditoria externa do período "', periodo_apuracao, '", 
                estou à disposição para responder suas dúvidas sobre os pontos apresentados no sumário executivo.
                Por favor, solicite qualquer informação sobre os achados de auditoria deste período.'
            ) AS role_user,
            CONCAT(
                'Olá! Estou pronto para responder suas dúvidas sobre os relatórios de auditoria externa do período ', 
                periodo_apuracao, '. Posso fornecer informações detalhadas sobre os pontos identificados no sumário executivo.
                Como posso ajudar?'
            ) AS role_assistant
        FROM 
            rcm.rcm_kpmg_relatorios 
        WHERE 
            periodo_apuracao = '{data.get("param2")}';
    """

// No seu component.ts
export class RcmKpmgConsolidadoComponent implements OnInit {
  dados: any;
  sessionId: string = uuidv4(); // Supondo que você esteja usando uuid para gerar IDs de sessão
  dynamicObject = {
    agente: "rcmkpmg",
    param1: "consolidado",
    param2: "" // Será preenchido com o período selecionado
  };
  
  periodos: string[] = []; // Lista de períodos disponíveis
  periodoSelecionado: string = "";
  
  constructor(private servicoLLM: ServicoLLMService) { }
  
  ngOnInit() {
    this.carregarPeriodos();
  }
  
  carregarPeriodos() {
    // Endpoint para carregar a lista de períodos disponíveis
    this.servicoLLM.getPeriodosApuracao().subscribe({
      next: (response) => {
        this.periodos = response;
        if (this.periodos.length > 0) {
          this.periodoSelecionado = this.periodos[0];
          this.carregarDadosConsolidados(this.periodoSelecionado);
        }
      },
      error: (err) => {
        this.showNotification('error', 'Erro', 'Erro ao carregar períodos de apuração');
      }
    });
  }
  
  carregarDadosConsolidados(periodo: string) {
    this.dynamicObject.param2 = periodo;
    this.servicoLLM.servicosAgentes(this.dynamicObject).subscribe({
      next: (response) => {
        console.log('response: ', response);
        this.dados = response[0];
        this.showNotification('info', 'Dados carregados', `Análise consolidada do período ${periodo} carregada com sucesso`);
        
        // Reseta a sessão no backend
        this.servicoLLM.resetSession(this.sessionId).subscribe();
      },
      error: (err) => {
        this.showNotification('error', 'Erro', 'Erro ao carregar dados consolidados');
      }
    });
  }
  
  showNotification(severity: string, summary: string, detail: string) {
    // Implementação do seu serviço de notificação
  }
  
  onPeriodoChange() {
    this.carregarDadosConsolidados(this.periodoSelecionado);
  }
}


<!-- Componente HTML para exibir relatórios KPMG consolidados -->
<div class="container-fluid p-3">
  <!-- Cabeçalho e seletor de período -->
  <div class="card mb-4">
    <div class="card-header bg-primary text-white">
      <div class="d-flex justify-content-between align-items-center">
        <h4 class="mb-0">Relatórios de Auditoria Externa - Análise Consolidada</h4>
        <div class="d-flex align-items-center">
          <label for="periodoSelect" class="me-2 text-white">Período:</label>
          <p-dropdown 
            id="periodoSelect" 
            [options]="periodos" 
            [(ngModel)]="periodoSelecionado" 
            (onChange)="onPeriodoChange()" 
            placeholder="Selecione um período" 
            styleClass="p-dropdown-sm">
          </p-dropdown>
        </div>
      </div>
    </div>
    
    <div class="card-body" *ngIf="dados">
      <!-- Sumário executivo do período (consolidado) -->
      <div class="mb-4">
        <h5 class="border-bottom pb-2 text-primary">Sumário Executivo do Período</h5>
        <div class="p-3 bg-light rounded" [innerHTML]="dados.sumario_executivo_per"></div>
        
        <div class="mt-3">
          <p-accordion>
            <p-accordionTab header="Racional da Análise">
              <pre class="p-2 bg-light">{{ dados.racional_sumario_per }}</pre>
            </p-accordionTab>
          </p-accordion>
        </div>
      </div>
      
      <!-- Lista de relatórios no período -->
      <div>
        <h5 class="border-bottom pb-2 text-primary">Análise por Relatório</h5>
        
        <p-table [value]="dados.relatorios_periodo" styleClass="p-datatable-sm" responsiveLayout="scroll">
          <ng-template pTemplate="header">
            <tr>
              <th>Relatório</th>
              <th>Sumário</th>
              <th>Detalhes</th>
            </tr>
          </ng-template>
          <ng-template pTemplate="body" let-relatorio>
            <tr>
              <td>{{ relatorio.relatorio }}</td>
              <td>
                <div [innerHTML]="relatorio.sumario_executivo_rel"></div>
              </td>
              <td>
                <p-button 
                  icon="pi pi-info-circle" 
                  styleClass="p-button-rounded p-button-info p-button-sm"
                  (onClick)="visualizarDetalhes(relatorio)">
                </p-button>
              </td>
            </tr>
          </ng-template>
          <ng-template pTemplate="emptymessage">
            <tr>
              <td colspan="3" class="text-center p-4">
                Nenhum relatório encontrado para este período.
              </td>
            </tr>
          </ng-template>
        </p-table>
      </div>
    </div>
    
    <div class="card-body d-flex justify-content-center" *ngIf="!dados">
      <p-progressSpinner strokeWidth="4" animationDuration=".5s"></p-progressSpinner>
    </div>
  </div>
  
  <!-- Modal de detalhes -->
  <p-dialog 
    header="Detalhes do Relatório" 
    [(visible)]="modalVisible" 
    [modal]="true" 
    [style]="{width: '80vw'}" 
    [maximizable]="true">
    
    <div *ngIf="relatorioSelecionado">
      <h5>{{ relatorioSelecionado.relatorio }}</h5>
      
      <div class="mb-3">
        <h6 class="text-primary">Sumário Executivo</h6>
        <div class="p-2 bg-light rounded" [innerHTML]="relatorioSelecionado.sumario_executivo_rel"></div>
      </div>
      
      <div class="mb-3">
        <h6 class="text-primary">Racional da Análise</h6>
        <pre class="p-2 bg-light rounded">{{ relatorioSelecionado.racional_sumario_rel }}</pre>
      </div>
      
      <div class="mt-3">
        <p-button 
          label="Chatbot de Auditoria" 
          icon="pi pi-comments" 
          styleClass="p-button-outlined"
          (onClick)="abrirChatbot(relatorioSelecionado)">
        </p-button>
      </div>
    </div>
    
    <ng-template pTemplate="footer">
      <p-button icon="pi pi-times" label="Fechar" (onClick)="modalVisible=false" styleClass="p-button-text"></p-button>
    </ng-template>
  </p-dialog>
</div>

