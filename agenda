import ssl
from kafka import KafkaProducer

ctx = ssl.create_default_context()
ctx.check_hostname = False
ctx.verify_mode = ssl.CERT_NONE

producer = KafkaProducer(
    bootstrap_servers=["broker-kafka-orcoute-bootstrap-...:443"],
    security_protocol="SSL",
    ssl_context=from kafka import KafkaProducer

producer = KafkaProducer(
    bootstrap_servers=["broker-kafka-orcoute-bootstrap-...:443"],
    security_protocol="SSL",
    ssl_cafile="caminho/para/ca_strimzi.pem",
    # se for TLS mútua, inclua ssl_certfile e ssl_keyfile
    # se houver SASL, inclua as configs de sasl_mechanism, username, password
)

conversei com o colega e na aplicação em java dele ele tem essas configurações:
kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="kafka-user" password="ODE1MEF1ZGl0SW5mb3I=;
kafka.security.protocol=SASL_SSL
kafka.sasl.mechanism=SCRAM-SHA-512

isso também entraria no python?
o que estou fazendo é isso:

producer = KafkaProducer(
    bootstrap_servers='broker-kafka-ocroute-bootstrap-aud-integracao-apps.apps.k8sdesbb111.nuvem.bb.com.br:443',
    value_serializer=lambda v: json.dumps(v).encode('utf-8'),
    security_protocol='SSL',
    ssl_cafile='kafkadesenv.pem'  # Caminho para o arquivo convertido
)

import json
import ssl
from kafka import KafkaProducer

producer = KafkaProducer(
    bootstrap_servers='broker-kafka-ocroute-bootstrap-aud-integracao-apps.apps.k8sdesbb111.nuvem.bb.com.br:443',
    value_serializer=lambda v: json.dumps(v).encode('utf-8'),

    # Ajustes de segurança para SASL_SSL
    security_protocol='SASL_SSL',
    sasl_mechanism='SCRAM-SHA-512',
    sasl_plain_username='kafka-user',       # mesmo usuário do Java
    sasl_plain_password='ODE1MEF1ZGl0SW5mb3I=',  # mesma senha do Java (ver se é base64 ou não)

    # CA para validar o certificado do broker
    ssl_cafile='kafkadesenv.pem',
    # Se precisar desabilitar hostname ou verificação de certificado (não recomendado):
    # ssl_context=ctx
)

# Agora envie a mensagem
producer.send('topico-exemplo-2', value={"chave": "valor"})
producer.flush()

